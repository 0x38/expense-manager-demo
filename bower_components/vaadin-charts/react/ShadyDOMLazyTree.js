"use strict";function lightDOMElement(e){return e.__isPolymerInstance__?Polymer.dom(e):e}function insertTreeChildren(e){if(enableLazy){var n=e.node,t=e.children;if(t.length)for(var r=0;r<t.length;r++)insertTreeBefore(n,t[r],null);else null!=e.html?lightDOMElement(n).innerHTML=e.html:null!=e.text&&setTextContent(lightDOMElement(n),e.text)}}function replaceChildWithTree(e,n){lightDOMElement(Polymer.dom(e).parentNode).replaceChild(n.node,e),insertTreeChildren(n)}function queueChild(e,n){enableLazy?e.children.push(n):lightDOMElement(e.node).insertBefore(n.node,null)}function queueHTML(e,n){enableLazy?e.html=n:lightDOMElement(e.node).innerHTML=n}function queueText(e,n){enableLazy?e.text=n:setTextContent(lightDOMElement(e.node),n)}function DOMLazyTree(){}var createMicrosoftUnsafeLocalFunction=require("react/lib/createMicrosoftUnsafeLocalFunction"),setTextContent=require("react/lib/setTextContent"),enableLazy="undefined"!=typeof document&&"number"==typeof document.documentMode||"undefined"!=typeof navigator&&"string"==typeof navigator.userAgent&&/\bEdge\/\d/.test(navigator.userAgent),insertTreeBefore=createMicrosoftUnsafeLocalFunction(function(e,n,t){e=lightDOMElement(e),11===n.node.nodeType?(insertTreeChildren(n),e.insertBefore(n.node,t)):(e.insertBefore(n.node,t),insertTreeChildren(n))});DOMLazyTree.insertTreeBefore=insertTreeBefore,DOMLazyTree.replaceChildWithTree=replaceChildWithTree,DOMLazyTree.queueChild=queueChild,DOMLazyTree.queueHTML=queueHTML,DOMLazyTree.queueText=queueText,module.exports=DOMLazyTree;